does not generate a config for clusterrole.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
does not generate a config for pdb.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot and tests for annotations.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      annotations:
        kubernetes.io/config: test-annotation
        kubernetes.io/config-different: 2
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for affinity.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for all-v5.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name
          labels:
            cluster: testing

        app_service:
          enabled: true
          apps:
            - labels:
                environment: test
              name: grafana
              uri: http://localhost:3000

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for all-v6.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name
          labels:
            cluster: testing

        app_service:
          enabled: true
          apps:
            - labels:
                environment: test
              name: grafana
              uri: http://localhost:3000

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      annotations:
        kubernetes.io/config: test-annotation
        kubernetes.io/config-different: 2
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for aws-databases.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: false

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for backwards-compatibility.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for db.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: false

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for imagepullsecrets.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for initcontainers.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for log-basic.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: json
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for log-extra.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: DEBUG
            output: /var/lib/teleport/test.log
            format:
              output: json
              extra_fields: ["level","timestamp","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for log-legacy.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: DEBUG
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for node-selector.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for pdb.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: DEBUG
            output: /var/lib/teleport/test.log
            format:
              output: json
              extra_fields: ["level","timestamp","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for resources.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for stateful.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster-name

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for tolerations.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
matches snapshot for volumes.yaml:
  1: |
    apiVersion: v1
    data:
      teleport.yaml: |
        teleport:
          auth_token: "/etc/teleport-secrets/auth-token"
          auth_servers: ["proxy.example.com:3080"]
          log:
            severity: INFO
            output: stderr
            format:
              output: text
              extra_fields: ["timestamp","level","component","caller"]

        kubernetes_service:
          enabled: true
          kube_cluster_name: test-kube-cluster

        app_service:
          enabled: false

        auth_service:
          enabled: false
        ssh_service:
          enabled: false
        proxy_service:
          enabled: false
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
